if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

def setMainManifestProps = { Manifest manifest->
	manifest.attributes (
			'FMLAT': 'interstellar_at.cfg',
			)
	manifest.mainAttributes (MANIFESTS)
}

jar {
	archiveName = "Interstellar-${project.version}.jar"
	manifest(setMainManifestProps)
}

task signJar(type: SignJar, dependsOn: reobfJar) {
	onlyIf {
		project.hasProperty('keyStore')
	}

	inputFile = jar.archivePath
	outputFile = jar.archivePath

	keyStore = findProperty('keyStore')
	alias = findProperty('keyStoreAlias')
	storePass = findProperty('keyStorePass')
	keyPass = findProperty('keyStoreKeyPass')
}

task devJar(type: Jar) {
	archiveName = "Interstellar-${project.version}.jar"
	from sourceSets.main.allJava
	from sourceSets.main.output
	classifier = 'dev'
	manifest(setMainManifestProps)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
	classifier = 'javadoc'
}

artifacts {
	archives devJar
	archives sourceJar
	archives javadocJar
}